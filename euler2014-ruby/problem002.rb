#!/usr/bin/env ruby

=begin
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=end

# Returns an array of the fib numbers, starting with [1, 2, ...]
def naive
  max_val = 4_000_000  
  fib_array = [ 1, 2 ]
  i = 2
  while true
    new_val = fib_array[i-2] + fib_array[i-1]
    fib_array.push(new_val)
    i += 1
    if new_val > max_val
      break
    end
  end
  puts fib_array.inspect
  puts fib_array
    .select { |val| val % 2 == 0 }
    .inject(0) { |a,b| a + b }
end

naive



